services:
  - type: web
    name: labor-management-system
    env: go
    plan: free
    buildCommand: |
      set -e
      echo 'Step 1: Environment check'
      pwd
      go version
      echo 'Step 2: Dependencies'
      go mod download
      go mod verify
      echo 'Step 3: Source verification'
      ls -la cmd/server/
      cat cmd/server/main.go | head -20
      echo 'Step 4: Clean build'
      rm -rf bin/
      mkdir -p bin
      echo 'Step 5: Build attempt 1 - Simple CGO disabled'
      CGO_ENABLED=0 GOOS=linux go build -v -o bin/main ./cmd/server/main.go 2>&1 || BUILD1_FAILED=1
      if [ -f bin/main ]; then
        echo 'SUCCESS: Simple CGO disabled build completed'
        ls -la bin/main
        file bin/main
      elif [ "$BUILD1_FAILED" = "1" ]; then
        echo 'Step 6: Build attempt 2 - PostgreSQL specific'
        rm -f bin/main
        echo 'Copying PostgreSQL database init...'
        cp database/init_postgres.go database/init.go
        CGO_ENABLED=0 GOOS=linux go build -v -o bin/main ./cmd/server/main.go 2>&1 || BUILD2_FAILED=1
        if [ -f bin/main ]; then
          echo 'SUCCESS: PostgreSQL specific build completed'
          ls -la bin/main
          file bin/main
        elif [ "$BUILD2_FAILED" = "1" ]; then
          echo 'Step 7: Build attempt 3 - Simple build script'
          chmod +x build.sh
          ./build.sh || BUILD3_FAILED=1
          if [ -f bin/main ]; then
            echo 'SUCCESS: Build script completed'
            ls -la bin/main
            file bin/main
          elif [ "$BUILD3_FAILED" = "1" ]; then
            echo 'FATAL: All build attempts failed'
            echo 'Go environment:'
            go env | grep -E '(GOOS|GOARCH|CGO)'
            echo 'Available files:'
            find . -name "*.go" | head -10
            exit 1
          fi
        fi
      fi
      chmod +x bin/main
      chmod +x start-render.sh
      echo 'Build completed successfully'
    startCommand: ./start-render.sh
    envVars:
      - key: PORT
        value: 10000
      - key: GIN_MODE
        value: release
      - key: DATABASE_URL
        fromDatabase:
          name: labor-management-db
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
    autoDeploy: false
    
databases:
  - name: labor-management-db
    plan: free
    databaseName: labor_management
    user: labor_user 